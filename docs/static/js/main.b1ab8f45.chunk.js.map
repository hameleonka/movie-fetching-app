{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseYear","storyline","MovieList","movies","map","id","AddMovie","formRef","useRef","titleRef","storylineRef","releaseYearRef","onSubmit","event","preventDefault","current","value","onAddMovie","reset","ref","control","htmlFor","type","rows","App","useState","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","useCallback","a","fetch","response","ok","Error","json","key","data","loadedMovies","push","message","useEffect","addMovieHandler","method","body","JSON","stringify","headers","length","MoviesList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1ab8f45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__2ENNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__27rBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__lMnXQ\"};","import classes from './Movie.module.css';\n\nfunction Movie(props) {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseYear}</h3>\n      <p>{props.storyline}</p>\n    </li>\n  );\n};\n\nexport default Movie;","import Movie from './Movie';\n\nimport classes from './MoviesList.module.css';\n\nfunction MovieList(props) {\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          storyline={movie.storyline}\n          releaseYear={movie.releaseYear}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;","import { useRef } from 'react';\n\nimport classes from './AddMovie.module.css';\n\nfunction AddMovie(props) {\n  const formRef = useRef();\n  const titleRef = useRef('');\n  const storylineRef = useRef('');\n  const releaseYearRef = useRef('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const movie = {\n      title: titleRef.current.value,\n      storyline: storylineRef.current.value,\n      releaseYear: releaseYearRef.current.value,\n    };\n\n    props.onAddMovie(movie);\n    formRef.current.reset();\n  }\n\n  return (\n    <form onSubmit={submitHandler} ref={formRef}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='storyline'>Storyline</label>\n        <textarea rows='10' id='storyline' ref={storylineRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='year'>Release Year</label>\n        <input type='text' id='year' ref={releaseYearRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n","import { useState, useCallback } from 'react';\n\nimport { useEffect } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\n\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-http-65cdc-default-rtdb.firebaseio.com/movies.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          storyline: data[key].storyline,\n          releaseYear: data[key].releaseYear\n        })\n      }\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  const addMovieHandler = async (movie) => {\n    try {\n      setError(null);\n      const response = await fetch('https://react-http-65cdc-default-rtdb.firebaseio.com/movies.json', {\n        method: 'POST',\n        body: JSON.stringify(movie),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      fetchMoviesHandler();\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && !error && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && !error && <p>Found no movies.</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}